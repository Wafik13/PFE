# Persistent Volume configurations for Industrial Intelligence Platform
# This file defines PVs, PVCs, and Storage Classes for HA storage setup

---
# Storage Classes for different performance tiers
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: iip-ssd-retain
  labels:
    app.kubernetes.io/name: storage-class
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    performance-tier: high
provisioner: kubernetes.io/aws-ebs  # Change based on your cloud provider
parameters:
  type: gp3
  iops: "3000"
  throughput: "125"
  encrypted: "true"
  kmsKeyId: "alias/iip-storage-key"
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
mountOptions:
  - debug

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: iip-hdd-retain
  labels:
    app.kubernetes.io/name: storage-class
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    performance-tier: standard
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  encrypted: "true"
  kmsKeyId: "alias/iip-storage-key"
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: iip-nvme-retain
  labels:
    app.kubernetes.io/name: storage-class
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    performance-tier: premium
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io2
  iops: "10000"
  encrypted: "true"
  kmsKeyId: "alias/iip-storage-key"
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
# PostgreSQL Primary Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-primary-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: primary
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
  annotations:
    volume.beta.kubernetes.io/storage-class: iip-ssd-retain
    backup.velero.io/backup-volumes: postgresql-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 100Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: primary

---
# PostgreSQL Read Replica Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-read-replica-1-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: read-replica
    app.kubernetes.io/part-of: iip-platform
    replica-index: "1"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-read-replica-2-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: read-replica
    app.kubernetes.io/part-of: iip-platform
    replica-index: "2"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 100Gi

---
# InfluxDB Persistent Volume Claims (for HA setup)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-data-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: iip-platform
    backup-policy: hourly
  annotations:
    volume.beta.kubernetes.io/storage-class: iip-nvme-retain
    backup.velero.io/backup-volumes: influxdb-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-nvme-retain
  resources:
    requests:
      storage: 500Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-wal-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: influxdb
    app.kubernetes.io/component: wal
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-nvme-retain
  resources:
    requests:
      storage: 50Gi

---
# MinIO Persistent Volume Claims (for distributed setup)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-0-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    minio-instance: "0"
    backup-policy: daily
  annotations:
    volume.beta.kubernetes.io/storage-class: iip-ssd-retain
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 1Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-1-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    minio-instance: "1"
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 1Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-2-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    minio-instance: "2"
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 1Ti

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-3-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    minio-instance: "3"
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 1Ti

---
# Redis Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-master-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: master
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-replica-1-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
    app.kubernetes.io/part-of: iip-platform
    replica-index: "1"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 20Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-replica-2-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: replica
    app.kubernetes.io/part-of: iip-platform
    replica-index: "2"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 20Gi

---
# RabbitMQ Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-data-pvc
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: messaging
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 50Gi

---
# MLflow Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-artifacts-pvc
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/component: model-registry
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 200Gi

---
# Feast Feature Store Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: feast-online-store-pvc
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: feast
    app.kubernetes.io/component: feature-store
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 100Gi

---
# Argo Workflows Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: argo-workflows-archive-pvc
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: argo-workflows
    app.kubernetes.io/component: workflow-controller
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 50Gi

---
# Prometheus Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-server-pvc
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 200Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-alertmanager-pvc
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 10Gi

---
# Grafana Persistent Volume Claims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage-pvc
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: visualization
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 20Gi

---
# Backup Storage for Velero
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: velero-backup-pvc
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 500Gi

---
# Shared storage for model artifacts and datasets
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-model-storage-pvc
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: shared-storage
    app.kubernetes.io/component: model-artifacts
    app.kubernetes.io/part-of: iip-platform
    backup-policy: daily
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: iip-ssd-retain
  resources:
    requests:
      storage: 1Ti

---
# Temporary storage for data processing
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temp-processing-pvc
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: temp-storage
    app.kubernetes.io/component: processing
    app.kubernetes.io/part-of: iip-platform
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: iip-hdd-retain
  resources:
    requests:
      storage: 500Gi

---
# Volume Snapshot Class for backups
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: iip-snapshot-class
  labels:
    app.kubernetes.io/name: volume-snapshot-class
    app.kubernetes.io/part-of: iip-platform
driver: ebs.csi.aws.com  # Change based on your CSI driver
deletionPolicy: Retain
parameters:
  encrypted: "true"

---
# Backup Schedule using VolumeSnapshot
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-schedule
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: backup-schedule
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: iip-platform
data:
  backup-policy.yaml: |
    # Daily backup schedule for critical data
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: daily-backup
      namespace: iip-infrastructure
    spec:
      schedule: "0 2 * * *"  # Daily at 2 AM
      jobTemplate:
        spec:
          template:
            spec:
              containers:
              - name: backup
                image: bitnami/kubectl:latest
                command:
                - /bin/sh
                - -c
                - |
                  # Create volume snapshots for critical PVCs
                  kubectl create volumesnapshot postgresql-backup-$(date +%Y%m%d) \
                    --from-pvc=postgresql-primary-pvc \
                    --volume-snapshot-class=iip-snapshot-class
                  
                  kubectl create volumesnapshot influxdb-backup-$(date +%Y%m%d) \
                    --from-pvc=influxdb-data-pvc \
                    --volume-snapshot-class=iip-snapshot-class
                  
                  kubectl create volumesnapshot minio-backup-$(date +%Y%m%d) \
                    --from-pvc=minio-data-0-pvc \
                    --volume-snapshot-class=iip-snapshot-class
              restartPolicy: OnFailure
              serviceAccountName: backup-service-account
  
  retention-policy.yaml: |
    # Cleanup old snapshots (keep last 7 days)
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      name: cleanup-old-snapshots
      namespace: iip-infrastructure
    spec:
      schedule: "0 3 * * *"  # Daily at 3 AM
      jobTemplate:
        spec:
          template:
            spec:
              containers:
              - name: cleanup
                image: bitnami/kubectl:latest
                command:
                - /bin/sh
                - -c
                - |
                  # Delete snapshots older than 7 days
                  CUTOFF_DATE=$(date -d '7 days ago' +%Y%m%d)
                  kubectl get volumesnapshots -o json | \
                    jq -r ".items[] | select(.metadata.name | test(\"backup-[0-9]{8}\")) | select(.metadata.name | split(\"-\")[-1] < \"$CUTOFF_DATE\") | .metadata.name" | \
                    xargs -r kubectl delete volumesnapshot
              restartPolicy: OnFailure
              serviceAccountName: backup-service-account