# Industrial Intelligence Platform - Main Configuration

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "fast-ssd"
  domain: "iip.yourcompany.com"
  environment: "production"
  
# Namespace Configuration
namespaces:
  - name: iip-infrastructure
    labels:
      tier: infrastructure
  - name: iip-applications
    labels:
      tier: applications
  - name: iip-mlops
    labels:
      tier: mlops
  - name: iip-monitoring
    labels:
      tier: monitoring

# Infrastructure Components
postgresql:
  enabled: true
  auth:
    postgresPassword: "changeme"
    database: "iip_main"
  primary:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
  metrics:
    enabled: true

redis:
  enabled: true
  auth:
    enabled: true
    password: "changeme"
  master:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
  replica:
    replicaCount: 2
    persistence:
      enabled: true
      size: 20Gi

rabbitmq:
  enabled: true
  auth:
    username: "iip-user"
    password: "changeme"
  persistence:
    enabled: true
    size: 50Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  clustering:
    enabled: true
    replicaCount: 3

minio:
  enabled: true
  auth:
    rootUser: "admin"
    rootPassword: "changeme123"
  defaultBuckets: "iip-data,iip-models,iip-logs"
  persistence:
    enabled: true
    size: 500Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"

influxdb:
  enabled: true
  auth:
    admin:
      username: "admin"
      password: "changeme"
      token: "admin-token"
  persistence:
    enabled: true
    size: 200Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "8Gi"
      cpu: "4000m"

# API Gateway
kong:
  enabled: true
  image:
    repository: kong
    tag: "3.4"
  env:
    database: "off"
    declarative_config: "/kong/declarative/kong.yml"
  ingressController:
    enabled: true
  proxy:
    type: LoadBalancer
    http:
      enabled: true
      servicePort: 80
      containerPort: 8000
    tls:
      enabled: true
      servicePort: 443
      containerPort: 8443

# Service Mesh
istio:
  enabled: true
  gateway:
    enabled: true
    hosts:
      - "iip.yourcompany.com"
      - "api.iip.yourcompany.com"
      - "scada.iip.yourcompany.com"
  virtualService:
    enabled: true
  destinationRule:
    enabled: true

# Microservices
microservices:
  scadaService:
    enabled: true
    image:
      repository: "iip/scada-service"
      tag: "latest"
    replicaCount: 3
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 70
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"
    
  dataAnalyticsService:
    enabled: true
    image:
      repository: "iip/analytics-service"
      tag: "latest"
    replicaCount: 2
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
        
  mlInferenceService:
    enabled: true
    image:
      repository: "iip/ml-inference"
      tag: "latest"
    replicaCount: 2
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 8
      targetCPUUtilizationPercentage: 75
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
        nvidia.com/gpu: 1
      limits:
        memory: "4Gi"
        cpu: "2000m"
        nvidia.com/gpu: 1

# MLOps Components
mlops:
  feast:
    enabled: true
    image:
      repository: "feastdev/feature-server"
      tag: "latest"
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
        
  mlflow:
    enabled: true
    image:
      repository: "python"
      tag: "3.9-slim"
    persistence:
      enabled: true
      size: 50Gi
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
        
  argoWorkflows:
    enabled: true
    controller:
      resources:
        requests:
          memory: "512Mi"
          cpu: "250m"
        limits:
          memory: "1Gi"
          cpu: "500m"

# KServe for Model Serving
kserve:
  enabled: true
  models:
    predictiveMaintenance:
      enabled: true
      storageUri: "s3://iip-models/predictive-maintenance"
      resources:
        requests:
          memory: "2Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"

# Monitoring
monitoring:
  prometheus:
    enabled: true
    server:
      persistentVolume:
        enabled: true
        size: 100Gi
      resources:
        requests:
          memory: "2Gi"
          cpu: "1000m"
        limits:
          memory: "4Gi"
          cpu: "2000m"
          
  grafana:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
    adminPassword: "changeme"
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

# Security
security:
  rbac:
    enabled: true
  networkPolicies:
    enabled: true
  podSecurityPolicies:
    enabled: true
  jwt:
    secret: "your-jwt-secret-key"
    issuer: "iip-platform"
    audience: "iip-services"

# Frontend
frontend:
  enabled: true
  image:
    repository: "iip/frontend"
    tag: "latest"
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    className: "nginx"
    hosts:
      - host: "iip.yourcompany.com"
        paths:
          - path: "/"
            pathType: Prefix
    tls:
      - secretName: "iip-tls"
        hosts:
          - "iip.yourcompany.com"

# Persistent Volumes
persistentVolumes:
  storageClasses:
    - name: "fast-ssd"
      provisioner: "kubernetes.io/aws-ebs"
      parameters:
        type: "gp3"
        iops: "3000"
        throughput: "125"
      reclaimPolicy: "Retain"
      allowVolumeExpansion: true

# Node Affinity and Anti-Affinity
affinity:
  nodeAffinity:
    infrastructure:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-type"
            operator: In
            values: ["infrastructure"]
    compute:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-type"
            operator: In
            values: ["compute"]
    gpu:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "accelerator"
            operator: In
            values: ["nvidia-tesla-v100", "nvidia-tesla-t4"]

# Tolerations
tolerations:
  infrastructure:
    - key: "node-type"
      operator: "Equal"
      value: "infrastructure"
      effect: "NoSchedule"
  gpu:
    - key: "nvidia.com/gpu"
      operator: "Exists"
      effect: "NoSchedule"