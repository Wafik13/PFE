{{- if .Values.kong.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.kong.image.tag }}
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kong
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api-gateway
        version: v1
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: kong
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - kong
              topologyKey: kubernetes.io/hostname
      containers:
      - name: kong
        image: "{{ .Values.kong.image.repository }}:{{ .Values.kong.image.tag }}"
        imagePullPolicy: Always
        env:
        {{- range $key, $val := .Values.kong.env }}
        - name: KONG_{{ $key | upper }}
          value: {{ $val | quote }}
        {{- end }}
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
        - name: KONG_PLUGINS
          value: "bundled,jwt,cors,rate-limiting,prometheus"
        - name: KONG_LOG_LEVEL
          value: "info"
        ports:
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-ssl
          containerPort: 8443
          protocol: TCP
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 8100
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: kong-config
          mountPath: /kong/declarative
          readOnly: true
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: kong-config
        configMap:
          name: kong-declarative-config
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway

---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
spec:
  type: {{ .Values.kong.proxy.type }}
  ports:
  - name: proxy
    port: {{ .Values.kong.proxy.http.servicePort }}
    targetPort: proxy
    protocol: TCP
  - name: proxy-ssl
    port: {{ .Values.kong.proxy.tls.servicePort }}
    targetPort: proxy-ssl
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}

---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
spec:
  type: ClusterIP
  ports:
  - name: admin
    port: 8001
    targetPort: admin
    protocol: TCP
  - name: metrics
    port: 8100
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-declarative-config
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: kong
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: api-gateway
data:
  kong.yml: |
    _format_version: "3.0"
    _transform: true
    
    services:
    - name: scada-service
      url: http://scada-service.iip-applications.svc.cluster.local:8080
      plugins:
      - name: jwt
        config:
          secret_is_base64: false
          key_claim_name: iss
      - name: cors
        config:
          origins:
          - "https://{{ .Values.global.domain }}"
          - "https://scada.{{ .Values.global.domain }}"
          methods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          headers:
          - Accept
          - Accept-Version
          - Content-Length
          - Content-MD5
          - Content-Type
          - Date
          - Authorization
          exposed_headers:
          - X-Auth-Token
          credentials: true
          max_age: 3600
      - name: rate-limiting
        config:
          minute: 100
          hour: 1000
          policy: local
      - name: prometheus
        config:
          per_consumer: true
          status_code_metrics: true
          latency_metrics: true
          bandwidth_metrics: true
    
    - name: analytics-service
      url: http://analytics-service.iip-applications.svc.cluster.local:8080
      plugins:
      - name: jwt
        config:
          secret_is_base64: false
          key_claim_name: iss
      - name: cors
        config:
          origins:
          - "https://{{ .Values.global.domain }}"
          methods:
          - GET
          - POST
          - OPTIONS
          headers:
          - Accept
          - Accept-Version
          - Content-Length
          - Content-Type
          - Date
          - Authorization
          credentials: true
      - name: rate-limiting
        config:
          minute: 200
          hour: 2000
          policy: local
    
    - name: ml-inference-service
      url: http://ml-inference-service.iip-applications.svc.cluster.local:8080
      plugins:
      - name: jwt
        config:
          secret_is_base64: false
          key_claim_name: iss
      - name: rate-limiting
        config:
          minute: 500
          hour: 5000
          policy: local
    
    - name: frontend-service
      url: http://frontend-service.iip-applications.svc.cluster.local:80
      plugins:
      - name: cors
        config:
          origins:
          - "https://{{ .Values.global.domain }}"
          methods:
          - GET
          - POST
          - OPTIONS
          headers:
          - Accept
          - Content-Type
          - Authorization
          credentials: true
    
    routes:
    - name: scada-api
      service: scada-service
      paths:
      - "/api/v1/scada"
      strip_path: false
      preserve_host: true
      protocols:
      - http
      - https
    
    - name: scada-control
      service: scada-service
      paths:
      - "/api/v1/control"
      strip_path: false
      preserve_host: true
      protocols:
      - https
      methods:
      - POST
      - PUT
      - DELETE
    
    - name: analytics-api
      service: analytics-service
      paths:
      - "/api/v1/analytics"
      strip_path: false
      preserve_host: true
      protocols:
      - http
      - https
    
    - name: ml-inference-api
      service: ml-inference-service
      paths:
      - "/api/v1/ml"
      - "/api/v1/predict"
      strip_path: false
      preserve_host: true
      protocols:
      - http
      - https
    
    - name: frontend-route
      service: frontend-service
      paths:
      - "/"
      strip_path: false
      preserve_host: true
      protocols:
      - http
      - https
    
    consumers:
    - username: iip-frontend
      jwt_secrets:
      - key: {{ .Values.security.jwt.issuer }}
        secret: {{ .Values.security.jwt.secret }}
    
    - username: iip-scada-client
      jwt_secrets:
      - key: {{ .Values.security.jwt.issuer }}
        secret: {{ .Values.security.jwt.secret }}
    
    plugins:
    - name: prometheus
      config:
        per_consumer: false
        status_code_metrics: true
        latency_metrics: true
        bandwidth_metrics: true
{{- end }}