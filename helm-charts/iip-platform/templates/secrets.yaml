# JWT Secret for Authentication
apiVersion: v1
kind: Secret
metadata:
  name: iip-jwt-secret
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: jwt-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  secret: {{ .Values.security.jwt.secret | b64enc }}
  issuer: {{ .Values.security.jwt.issuer | b64enc }}
  audience: {{ .Values.security.jwt.audience | b64enc }}

---
# MinIO Credentials Secret
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: minio-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  access-key: {{ .Values.minio.auth.rootUser | b64enc }}
  secret-key: {{ .Values.minio.auth.rootPassword | b64enc }}

---
# Copy MinIO credentials to other namespaces
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: minio-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
type: Opaque
data:
  access-key: {{ .Values.minio.auth.rootUser | b64enc }}
  secret-key: {{ .Values.minio.auth.rootPassword | b64enc }}

---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: minio-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: storage
type: Opaque
data:
  access-key: {{ .Values.minio.auth.rootUser | b64enc }}
  secret-key: {{ .Values.minio.auth.rootPassword | b64enc }}

---
# InfluxDB Auth Secret
apiVersion: v1
kind: Secret
metadata:
  name: influxdb-auth
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: influxdb-auth
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  admin-user: {{ .Values.influxdb.auth.admin.username | b64enc }}
  admin-password: {{ .Values.influxdb.auth.admin.password | b64enc }}
  admin-token: {{ .Values.influxdb.auth.admin.token | b64enc }}

---
# Copy InfluxDB credentials to applications namespace
apiVersion: v1
kind: Secret
metadata:
  name: influxdb-auth
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: influxdb-auth
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
type: Opaque
data:
  admin-user: {{ .Values.influxdb.auth.admin.username | b64enc }}
  admin-password: {{ .Values.influxdb.auth.admin.password | b64enc }}
  admin-token: {{ .Values.influxdb.auth.admin.token | b64enc }}

---
# Argo Workflows PostgreSQL Config
apiVersion: v1
kind: Secret
metadata:
  name: argo-postgres-config
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: argo-postgres-config
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: workflow
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  username: {{ "postgres" | b64enc }}
  password: {{ .Values.postgresql.auth.postgresPassword | b64enc }}

---
# TLS Certificate Secret (placeholder - should be managed by cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: iip-tls-secret
  namespace: iip-infrastructure
  labels:
    app.kubernetes.io/name: tls-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  # These should be populated by cert-manager
  tls.crt: ""
  tls.key: ""

---
# Copy TLS secret to applications namespace
apiVersion: v1
kind: Secret
metadata:
  name: iip-tls
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: tls-secret
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: security
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
type: kubernetes.io/tls
data:
  tls.crt: ""
  tls.key: ""

---
# KServe Webhook Server Certs
apiVersion: v1
kind: Secret
metadata:
  name: webhook-server-certs
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: webhook-server-certs
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: model-serving
type: Opaque
data:
  # These should be populated by cert-manager or webhook certificate controller
  tls.crt: ""
  tls.key: ""

---
# External System Credentials (MQTT, OPC-UA)
apiVersion: v1
kind: Secret
metadata:
  name: external-systems-credentials
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: external-systems-credentials
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: integration
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  # MQTT Broker Credentials
  mqtt-username: {{ "iip-client" | b64enc }}
  mqtt-password: {{ "changeme-mqtt" | b64enc }}
  mqtt-ca-cert: ""
  mqtt-client-cert: ""
  mqtt-client-key: ""
  
  # OPC-UA Server Credentials
  opcua-username: {{ "iip-opcua-client" | b64enc }}
  opcua-password: {{ "changeme-opcua" | b64enc }}
  opcua-certificate: ""
  opcua-private-key: ""
  
  # Edge Gateway API Key
  edge-gateway-api-key: {{ "changeme-edge-api-key" | b64enc }}

---
# API Keys for External Services
apiVersion: v1
kind: Secret
metadata:
  name: external-api-keys
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: external-api-keys
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: integration
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  # Weather API for environmental data
  weather-api-key: {{ "changeme-weather-api" | b64enc }}
  
  # Equipment manufacturer API keys
  siemens-api-key: {{ "changeme-siemens-api" | b64enc }}
  schneider-api-key: {{ "changeme-schneider-api" | b64enc }}
  rockwell-api-key: {{ "changeme-rockwell-api" | b64enc }}
  
  # Cloud provider credentials (if needed)
  aws-access-key-id: ""
  aws-secret-access-key: ""
  azure-client-id: ""
  azure-client-secret: ""
  gcp-service-account-key: ""

---
# Database Connection Strings
apiVersion: v1
kind: Secret
metadata:
  name: database-connections
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: database-connections
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  postgresql-url: {{ printf "postgresql://postgres:%s@postgresql.iip-infrastructure.svc.cluster.local:5432/%s" .Values.postgresql.auth.postgresPassword .Values.postgresql.auth.database | b64enc }}
  redis-url: {{ printf "redis://:%s@redis-master.iip-infrastructure.svc.cluster.local:6379" .Values.redis.auth.password | b64enc }}
  influxdb-url: {{ printf "http://%s:%s@influxdb.iip-infrastructure.svc.cluster.local:8086" .Values.influxdb.auth.admin.username .Values.influxdb.auth.admin.password | b64enc }}
  rabbitmq-url: {{ printf "amqp://%s:%s@rabbitmq.iip-infrastructure.svc.cluster.local:5672" .Values.rabbitmq.auth.username .Values.rabbitmq.auth.password | b64enc }}
  minio-url: {{ printf "http://%s:%s@minio.iip-infrastructure.svc.cluster.local:9000" .Values.minio.auth.rootUser .Values.minio.auth.rootPassword | b64enc }}

---
# Copy database connections to MLOps namespace
apiVersion: v1
kind: Secret
metadata:
  name: database-connections
  namespace: iip-mlops
  labels:
    app.kubernetes.io/name: database-connections
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: database
type: Opaque
data:
  postgresql-url: {{ printf "postgresql://postgres:%s@postgresql.iip-infrastructure.svc.cluster.local:5432/%s" .Values.postgresql.auth.postgresPassword .Values.postgresql.auth.database | b64enc }}
  redis-url: {{ printf "redis://:%s@redis-master.iip-infrastructure.svc.cluster.local:6379" .Values.redis.auth.password | b64enc }}
  influxdb-url: {{ printf "http://%s:%s@influxdb.iip-infrastructure.svc.cluster.local:8086" .Values.influxdb.auth.admin.username .Values.influxdb.auth.admin.password | b64enc }}
  rabbitmq-url: {{ printf "amqp://%s:%s@rabbitmq.iip-infrastructure.svc.cluster.local:5672" .Values.rabbitmq.auth.username .Values.rabbitmq.auth.password | b64enc }}
  minio-url: {{ printf "http://%s:%s@minio.iip-infrastructure.svc.cluster.local:9000" .Values.minio.auth.rootUser .Values.minio.auth.rootPassword | b64enc }}

---
# Encryption Keys for Data at Rest
apiVersion: v1
kind: Secret
metadata:
  name: encryption-keys
  namespace: iip-applications
  labels:
    app.kubernetes.io/name: encryption-keys
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: iip-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  # AES-256 key for application-level encryption
  aes-key: {{ "changeme-32-char-aes-encryption-key" | b64enc }}
  
  # RSA key pair for asymmetric encryption
  rsa-private-key: ""
  rsa-public-key: ""
  
  # HMAC key for message authentication
  hmac-key: {{ "changeme-hmac-secret-key" | b64enc }}